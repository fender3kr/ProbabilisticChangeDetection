/*
 * app.h
 *
 *  Created on: Feb 27, 2015
 *  Author: Seokyong Hong
 */

#ifndef SRC_SHONG3_APP_H_
#define SRC_SHONG3_APP_H_

#include <stdio.h>
#include <float.h>
#include <stdlib.h>
#include <gdal/gdal.h>
#include <gdal/cpl_conv.h>
#include <cv.h>
#include <highgui.h>
#include <opencv2/imgproc/imgproc_c.h>
#include "vlfeat-0.9.20/gmm.h"
#include "vlfeat-0.9.20/host.h"

#define MAX_ITERATION	100

typedef struct {
	int x;
	int y;
	int width;
	int height;
} grid;

typedef struct {
	VlGMM *			gmm;
	double			loglikelihood;
	int				G;
} _clusters;

int clustering_init(void);
int clustering_close(void);
int clustering_perform(double *data, int size, int dimension, int from, int to);

float *flatten(image_handle *handle);
float *extract_image(image_handle *handle);
float *load_grid(image_handle *handle, grid box);
unsigned char *load_image(image_handle *h_image);
image_handle *open_image(char *path);
int generate_grid_plan(image_handle *handle, int width, int height, grid **grids, int top_margin, int left_margin, int bottom_margin, int right_margin);
int check_plan(float *grid1, float *grid2, int width, int height, int band, float percentage);
int unload_image(image_handle *handle);
int save_clusters(double *klds, grid *plan, int grid_size, image_handle *image1, image_handle *image2);
void add_random_pixels(float *image1, float *image2, int band, int width, int height, float percentage);

#endif /* SRC_SHONG3_APP_H_ */
